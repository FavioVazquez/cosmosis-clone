[runtime]
sampler = grid

[grid]
nsample_dimension=24
save=demo11/data

[output]
filename=demo11.txt
format=text
fatal_errors=F

[pipeline]
; we have replaced our camb with isitgr here instead
modules = consistency isitgr sigma8_rescale halofit extrapolate_power load_nz shear_shear_mg 2pt cfhtlens
values = demos/values11.ini
likelihoods = cfhtlens
extra_output =
quiet=T
debug=T
timing=F

[consistency]
file = cosmosis-standard-library/utility/consistency/consistency_interface.py

[isitgr]
file = cosmosis-standard-library/boltzmann/isitgr/camb.so
mode=all
lmax=2500
feedback=2

; These control how the modified gravity parameters we have chosen
; are interpreted.
use_r_function = F
scale_dependent = F

[sigma8_rescale]
file = cosmosis-standard-library/utility/sample_sigma8/sigma8_rescale.py

[halofit]
file = cosmosis-standard-library/boltzmann/halofit/halofit_module.so

[load_nz]
file = cosmosis-standard-library/number_density/load_nz/load_nz.py
filepath = cosmosis-standard-library/likelihood/cfhtlens/combined_nz.txt

[shear_shear_mg]
file = cosmosis-standard-library/shear/spectra-ppf/interface.so
ell_min = 20.0
ell_max = 200000.0
n_ell = 150
intrinsic_alignments=F


;This Nicaea code converts C_ell into xi(theta).
;It is fast and accurate but requires a high ell_max, as shown above
[2pt]
file = cosmosis-standard-library/shear/cl_to_xi_nicaea/nicaea_interface.so

[cfhtlens]
file = cosmosis-standard-library/likelihood/cfhtlens/cfhtlens_interface.py

[extrapolate_power]
file=cosmosis-standard-library/boltzmann/extrapolate/extrapolate_power.py
kmax=500.0
