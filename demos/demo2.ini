[runtime]
sampler = test

[test]
save_dir=demo_output_2
fatal_errors=T

[pipeline]
modules = consistency camb planck bicep2
values = demos/values2.ini

; We are now asking for some likelihoods
; at the end of the pipeline.  When doing
; MCMC this line specified the likelihoods to use
; for the acceptance.  Otherwise it just gets
; printed out
likelihoods = bicep planck
quiet=F
debug=T
timing=F

; We have two different likelihoods now - Planck and BICEP2.
[bicep2]
file = cosmosis-standard-library/likelihood/bicep2/bicep_interface.py

[planck]
file = cosmosis-standard-library/likelihood/planck/planck_interface.so
; The Planck module has some file paths it needs setting
; These files can all be downloaded from the Planck archives

; Please fill in and uncomment this line:
t_high_file = ${PLANCK_DATA_DIR}/CAMspec_v6.2TN_2013_02_26_dist.clik

;We will leave out lensing for now. If any of these 
; are not set then that likelihood will not be included.
;t_low_file = ups/planckdata/v1_1/data/lowlike_v222.clik
;p_low_file =
;lensing_file =

; The consistency module translates between our chosen parameterization
; and any other that modules in the pipeline may want (e.g. camb)
[consistency]
file = cosmosis-standard-library/utility/consistency/consistency_interface.py

; Planck is the same as before, except we tell it to include tensors
; In fact because we are specifing r_T in the values2.ini file they
; would be included anyway, but it is good practice to include them here
[camb]
file = cosmosis-standard-library/boltzmann/camb/camb.so
mode=all
lmax=2500
feedback=2
do_tensors=T
do_lensing=T
do_nonlinear=T
high_ell_template=cosmosis-standard-library/boltzmann/camb/camb_Jan15/HighLExtrapTemplate_lenspotentialCls.dat

